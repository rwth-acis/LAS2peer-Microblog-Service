// Generated by CoffeeScript 1.7.1
(function() {
  var addEntry, addEntryInput, api, currentEntry, fetchEntries, initEvents, initMicroblogCommentViewer, isEnteringInput, iwcCallback, iwcManager, login, microblogLib, requestSender;

  api = i5.las2peer.jsAPI;

  microblogLib = i5.las2peer.microblog;


  /*
    See microblog-viewer for comments.
   */

  if (typeof gadgets !== "undefined" && gadgets !== null) {
    iwcCallback = function(intent) {
      if (intent.action === "MICROBLOG_ENTRY_SELECTED") {
        fetchEntries(intent.data);
      }
      else if (intent.action === "MICROBLOG_SELECTED") {
        $("#content").html("");
      }
    };
    iwcManager = new api.IWCManager(iwcCallback);
  }

  login = new api.Login(api.LoginTypes.HTTP_BASIC);

  login.setUserAndPassword(clientDefaults.userName, clientDefaults.userPassword);

  requestSender = new api.RequestSender(clientDefaults.address, login);

  isEnteringInput = false;

  currentEntry = "";

  $(document).ready(function() {
    initMicroblogCommentViewer();
  });

  initMicroblogCommentViewer = function() {
    initEvents();
  };

  initEvents = function() {
    return $("#addEntry").click(function() {
      addEntryInput();
    });
  };

  addEntryInput = function() {
    if (isEnteringInput || currentEntry.length === 0) {
      return 0;
    }
    microblogLib.ElementGenerator.generateMultilineTextfield($("#content"));
    $("#sendEntryButton").click(function(e) {
      addEntry();
    });
    isEnteringInput = true;
    $("#enterBlogEntry").focus();
  };

  addEntry = function() {
    var entry;
    entry = $("#enterBlogEntry").val().trim();
    isEnteringInput = false;
    $("#textfieldBox").remove();
    if (entry.length > 0) {
      requestSender.sendRequest("post", "comments/" + currentEntry, entry, function(data) {
        fetchEntries(currentEntry);
      });
    }
  };

  fetchEntries = function(entry) {
    currentEntry = entry;
    $("#content").html("");
    requestSender.sendRequest("get", "entries/" + entry, "", function(data) {
      var $xml, $xmlInner, requests, xml, xmlCallback;
      xml = $.parseXML(data);
      $xml = $(xml);
      $("#header .title").text($xml.find("resource").attr("name"));
      requests = [];
      $xmlInner = [];
      xmlCallback = function(childData) {
        var xmlInner;
        xmlInner = $.parseXML(childData);
        $xmlInner[0] = $(xmlInner).find("resource");
      };
      $xml.find("child").each(function(index) {
        requests[index] = new api.Request("get", "comments/" + $(this).attr("id"), "", function(childData) {
          var xmlInner;
          xmlInner = $.parseXML(childData);
          $xmlInner[index] = $(xmlInner).find("resource");
        });
      });
      requestSender.sendRequestsAsync(requests, function() {
        microblogLib.ElementGenerator.generateEntryElements($xmlInner, null, $("#content"));
      });
    });
  };

}).call(this);

//# sourceMappingURL=comment-viewer.js.map